<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:p="http://xmlns.jcp.org/jsf/passthrough">


<ui:composition template="/template/layoutUser.xhtml">
	<f:metadata>
		<f:viewParam name="id" value="#{editEventController.editEventId}" />
		<f:event type="preRenderView" listener="#{editEventController.loadEvent}" />
	</f:metadata>

	<ui:define name="head">
		<title>Internet of Dogs - #{editEventController.editEventId != -1 ? 'Edit Event' : 'Create Event'}</title>
		<h:outputStylesheet name="editevent.css" library="css" />
		<h:outputStylesheet name="calenderview.css" library="css" />
		<h:outputStylesheet name="map.css" library="css" />
		<h:outputScript name="map.js" library="js" />
		<h:outputScript name="prototype.js" library="js" />
		<h:outputScript name="calenderview.js" library="js" />

		<h:outputScript>
			var myCal;
			var hour = 0;
			var minute = 0;
		
			function setupCalendars() {
        		// Embedded Calendar
       			myCal = Calendar.setup({
           	 		parentElement: 'editevent-calendar'
          		});      		
          		myCal.setSelectHandler(onDateChanged);
        	
        		var prevDate = document.getElementById('editevent-utc-date').value;
        		console.log('prevDate',prevDate);
        		if(!isNaN(prevDate) &amp;&amp; prevDate != 0){
        			var date = new Date(prevDate * 1000);
        			console.log('date', date);
        			myCal.setDate(date);
        			hour = date.getHours();
        			minute = date.getMinutes();
        			document.getElementById('editevent-hour-input').value = hour;
        			document.getElementById('editevent-minute-input').value = minute;    	
        		}
        		
        		calculateUnixTime();
      		}      
		
			function calculateUnixTime() {							
				var date = new Date(myCal.date.getTime());
				date.setHours(hour);
				date.setMinutes(minute);
				date.setSeconds(0);
				date.setMilliseconds(0);
				
				utcSeconds = date.getTime() / 1000;			
				document.getElementById('editevent-utc-date').value = utcSeconds;			
			}
		
			function onHourChanged(value) {
				hour = parseInt(value);
				if(isNaN(hour)) {
					hour = 0;
				}
							
				calculateUnixTime();
			}
		
			function onMinuteChanged(value) {
	 			minute = parseInt(value);
	 			if(isNaN(minute)) {
	 				minute = 0;
	 			}
	 			calculateUnixTime();
			}
			
			function onDateChanged(calendar) {
				calculateUnixTime();
			}
				
      		Event.observe(window, 'load', function() { 
      			if(document.getElementById('editevent-calendar')) {
      				setupCalendars(); 
      			}
      			else {
      				console.log('calendar box not found');
      			}
      		});		
		</h:outputScript>
		
		<h:outputScript>
			setLocation(#{empty editEventController.event.latitude ? 0 : editEventController.event.latitude},
						#{empty editEventController.event.longitude ? 0 : editEventController.event.longitude});	
			setAllowEdit(true);
			setAllowGeoLocation(false);
			setZoomLevel(8);
		</h:outputScript>
	</ui:define>

	<ui:define name="content">
		<ui:fragment rendered="#{empty editEventController.event}">
			<div class="content-block">
				<h3 class="margin-medium">Error</h3>
				<p style="margin-top: 12px; margin-bottom: 12px;">Unauthorized.</p>
			</div>
		</ui:fragment>
	
		<h:form id="createevent" prependId="false" class="content-block" rendered="#{not empty editEventController.event}">
			<h:commandLink onclick="if (!confirm('Are you sure you want to cancel this event?')) return false"
				id="editevent-cancelevent-button"
				class="icon-link margin-large"
				rendered="#{editEventController.editEventId != -1}"
				action="#{editEventController.cancelEvent}" 
				immediate="true">
				<i class="material-icons">clear</i><span>Cancel Event</span>
			</h:commandLink>		
			<h2 class="margin-large">#{editEventController.editEventId != -1 ? 'Edit Event' : 'Create Event'}</h2>
			<div class="clear" />
			
			<label>Title:</label>
			<h:inputText id="editevent-title-input"
				value="#{editEventController.event.title}" required="true" p:maxlenght="100"
				requiredMessage="Enter title." validatorMessage="Max 100 characters.">
				<f:validateLength maximum="100" />
			</h:inputText>
			<h:message class="error-message" for="editevent-title-input" />
			<div style="margin-top: 36px;" />
			<label>Description:</label>
			<h:inputTextarea id="editevent-description-input" rows="4" cols="40"
				value="#{editEventController.event.description}" required="true" p:maxlenght="1000"
				requiredMessage="Enter description."
				validatorMessage="Max 1000 characters.">
				<f:validateLength maximum="1000" />
			</h:inputTextarea>
			<h:message class="error-message" for="editevent-description-input" />

			<h4>Date</h4>
			<div id="editevent-calendar-wrapper">
				<div id="editevent-calendar" class="calendar"></div>
								
				<div id="editevent-time-wrapper">
					<div id="editevent-hour-wrapper">
						<label>Hour</label>
						<h:inputText  id="editevent-hour-input"  
							p:type="number" p:min="0" p:max="23" onchange="onHourChanged(this.value)"
							validatorMessage="Enter hour." >	
							<f:validateLongRange minimum="0" maximum="23" />
						</h:inputText>
						<h:message class="error-message" for="editevent-hour-input" />
					</div>
													
					<div id="editevent-minute-wrapper">
						<label>Minute</label>
						<h:inputText id="editevent-minute-input"
							onchange="onMinuteChanged(this.value)" p:type="number" p:min="0" p:max="59"
							validatorMessage="Enter minute." >
							<f:validateLongRange minimum="0" maximum="59" />
						</h:inputText>
						<h:message class="error-message" for="editevent-minute-input" />
					</div>
				</div>						
				<h:inputHidden id="editevent-utc-date" value="#{editEventController.event.date}" />
			</div>

			<h4>Location</h4>
			<input id="pac-input" class="controls" type="text" placeholder="Search"></input>
			<div id="map" style="width: 80%;"></div>
			<h:inputHidden id="lat" value="#{editEventController.event.latitude}" />
			<h:inputHidden id="lng" value="#{editEventController.event.longitude}" />

			<script
				src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDqA3iH8WgQpzZVcfSh_cqy1ZJL2GKj8QY&amp;signed_in=true&amp;callback=initMap&amp;libraries=places"
				async="async" defer="defer">				
			</script>
			
			<div style="margin-top: 36px;" />

			<h:commandLink class="icon-link"
				action="#{editEventController.createEvent}"
				rendered="#{editEventController.editEventId == -1}">
				<i class="material-icons">save</i>
				<span>Create</span>
			</h:commandLink>
			<h:commandLink class="icon-link"
				action="#{editEventController.editEvent}"
				rendered="#{editEventController.editEventId != -1}">
				<i class="material-icons">save</i>
				<span>Save</span>
			</h:commandLink>
			<h:link class="icon-link" outcome="feed">
				<i class="material-icons">cancel</i>
				<span>Cancel</span>
			</h:link>	
		 </h:form>
	</ui:define>
</ui:composition>
</html>
